@model MbmStore.ViewModels.ShippingDetails
	@{
		ViewBag.Title = "SportStore: Checkout";
	}

<h2> Check out now </h2>
<p> Please enter your details, and we'll ship your goods right away!</p> 

@using (Html.BeginForm())
{
	<h3>Ship to</h3>
	foreach (var property in ViewData.ModelMetadata.Properties)
	{
		if (property.PropertyName != "GiftWrap")
		{
			<div class="form-group">
				<label>@(property.DisplayName ?? property.PropertyName)</label> 
				@Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
			</div> 
		}
	}

	<div class="form-group">
		<label>Firstname:</label>
		@Html.TextBoxFor(x => x.Firstname, new { @class = "form-control" })
	</div> 
	
	<div class="form-group">
		<label>Lastname:</label> 
		@Html.TextBoxFor(x => x.Lastname, new { @class = "form-control" })
	</div> 
	
	<div class="form-group">
		<label>Address:</label>
		@Html.TextBoxFor(x => x.Address, new { @class = "form-control" }) 
	</div>
	
	<div class="form-group"> 
		<label>Zip:</label>
		@Html.TextBoxFor(x => x.Zip, new { @class = "form-control" }) 
	</div> 
	
	<div class="form-group"> 
		<label>Country:</label> 
		@Html.TextBoxFor(x => x.Country, new { @class = "form-control" }) 
	</div> 
	
	<div class="form-group">
		<label>Email:</label> 
		@Html.TextBoxFor(x => x.Email, new { @class = "form-control" }) 
	</div>

<h3>Options</h3> 
<div class="checkbox"> 
	<label> @Html.EditorFor(x => x.GiftWrap) Gift wrap these items </label>
</div> 

<div class="text-center"> 
	<input class="btn btn-primary" type="submit" value="Complete order" /> 
</div> 
}
